// <auto-generated />
using System;
using DemoWpf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoWpf.Migrations
{
    [DbContext(typeof(HotelManagementContext))]
    [Migration("20250617164154_RestoreUsers")]
    partial class RestoreUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoWpf.Models.CleaningSchedule", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("CleanerId")
                        .HasColumnType("int")
                        .HasColumnName("cleaner_id");

                    b.Property<DateOnly>("CleaningDate")
                        .HasColumnType("date")
                        .HasColumnName("cleaning_date");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CleanerId");

                    b.HasIndex("RoomId");

                    b.ToTable("Cleaning_Schedule", (string)null);
                });

            modelBuilder.Entity("DemoWpf.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("CheckIn")
                        .HasColumnType("date")
                        .HasColumnName("check_in");

                    b.Property<DateOnly>("CheckOut")
                        .HasColumnType("date")
                        .HasColumnName("check_out");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("document_number");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("DemoWpf.Models.GuestService", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("ReservationsId")
                        .HasColumnType("int")
                        .HasColumnName("reservations_id");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ReservationsId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Guest_Services", (string)null);
                });

            modelBuilder.Entity("DemoWpf.Models.Integration", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IntegrationDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("integration_details");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Integrations");
                });

            modelBuilder.Entity("DemoWpf.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("reservation_id");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DemoWpf.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("CheckInDate")
                        .HasColumnType("date")
                        .HasColumnName("check_in_date");

                    b.Property<DateOnly>("CheckOutDate")
                        .HasColumnType("date")
                        .HasColumnName("check_out_date");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_id");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DemoWpf.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("category");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("floor");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DemoWpf.Models.RoomAccess", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AccessCardCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("access_card_code");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_id");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Room_Access", (string)null);
                });

            modelBuilder.Entity("DemoWpf.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("DemoWpf.Models.StatisticsHotel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("Adr")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("adr");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<decimal?>("OccupancyRate")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("occupancy_rate");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("revenue");

                    b.Property<decimal?>("Revpar")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("revpar");

                    b.HasKey("Id");

                    b.ToTable("Statistics_hotel", (string)null);
                });

            modelBuilder.Entity("DemoWpf.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<int?>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstname");

                    b.Property<bool?>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastLoginDate ");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DemoWpf.Models.Лист1", b =>
                {
                    b.Property<string>("F4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Категория")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Номер")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Этаж")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("Лист_1$", (string)null);
                });

            modelBuilder.Entity("DemoWpf.Models.CleaningSchedule", b =>
                {
                    b.HasOne("DemoWpf.Models.User", "Cleaner")
                        .WithMany("CleaningSchedules")
                        .HasForeignKey("CleanerId")
                        .HasConstraintName("FK_Cleaning_Schedule_Users");

                    b.HasOne("DemoWpf.Models.Room", "Room")
                        .WithMany("CleaningSchedules")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Cleaning_Schedule_Rooms");

                    b.Navigation("Cleaner");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DemoWpf.Models.GuestService", b =>
                {
                    b.HasOne("DemoWpf.Models.Reservation", "Reservations")
                        .WithMany("GuestServices")
                        .HasForeignKey("ReservationsId")
                        .HasConstraintName("FK_Guest_Services_Reservations");

                    b.HasOne("DemoWpf.Models.Service", "Service")
                        .WithMany("GuestServices")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_Guest_Services_Services");

                    b.Navigation("Reservations");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("DemoWpf.Models.Payment", b =>
                {
                    b.HasOne("DemoWpf.Models.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK_Payments_Reservations");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("DemoWpf.Models.Reservation", b =>
                {
                    b.HasOne("DemoWpf.Models.Guest", "Guest")
                        .WithMany("Reservations")
                        .HasForeignKey("GuestId")
                        .HasConstraintName("FK_Reservations_Guests");

                    b.HasOne("DemoWpf.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Reservations_Rooms");

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DemoWpf.Models.RoomAccess", b =>
                {
                    b.HasOne("DemoWpf.Models.Guest", "Guest")
                        .WithMany("RoomAccesses")
                        .HasForeignKey("GuestId")
                        .HasConstraintName("FK_Room_Access_Guests");

                    b.HasOne("DemoWpf.Models.Room", "Room")
                        .WithMany("RoomAccesses")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Room_Access_Rooms");

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DemoWpf.Models.Guest", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("RoomAccesses");
                });

            modelBuilder.Entity("DemoWpf.Models.Reservation", b =>
                {
                    b.Navigation("GuestServices");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DemoWpf.Models.Room", b =>
                {
                    b.Navigation("CleaningSchedules");

                    b.Navigation("Reservations");

                    b.Navigation("RoomAccesses");
                });

            modelBuilder.Entity("DemoWpf.Models.Service", b =>
                {
                    b.Navigation("GuestServices");
                });

            modelBuilder.Entity("DemoWpf.Models.User", b =>
                {
                    b.Navigation("CleaningSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
